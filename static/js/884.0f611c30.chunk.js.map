{"version":3,"file":"static/js/884.0f611c30.chunk.js","mappings":"sLAEaA,E,QAAYC,GAAAA,GAAH,kG,qICCTC,EAAUD,EAAAA,GAAAA,IAAH,sJAQPE,EAAQF,EAAAA,GAAAA,MAAH,+F,SCTLG,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjC,OACE,SAACJ,EAAD,WACE,SAACC,EAAD,CACEI,KAAK,OACLF,MAAOA,EACPC,SAAU,SAAAE,GAAC,OAAIF,EAASE,EAAEC,OAAOJ,MAAtB,KAIlB,E,oBCkCD,EAxCe,WAAO,IAAD,EACbK,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAgB/C,OATAC,EAAAA,EAAAA,YAAU,WACU,KAAdF,GAIJG,EAAAA,EAAAA,IAAiBH,GAAWI,MAAK,SAAAC,GAAK,OAAIT,EAAUS,EAAd,IAHpCT,EAAU,GAIb,GAAE,CAACI,KAIF,4BACE,SAACd,EAAD,CAAWC,MAAOa,EAAWZ,SAhBP,SAAAkB,GAExBP,EAD6B,KAAVO,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEhD,KAcG,yBACGX,EAAOY,KAAI,SAAAF,GAAK,OACf,0BACE,UAAC,KAAD,CAAMG,GAAE,UAAKH,EAAMI,IAAMC,MAAO,CAAEC,KAAMnB,GAAxC,WACE,gBACEoB,IAAG,0CAAqCP,EAAMQ,aAC9CC,IAAI,YAEN,SAAC,IAAD,UAAYT,EAAMU,YANZV,EAAMI,GADD,QAcxB,C,4MC1CKO,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACQC,IAAAA,IAAA,sCACyBF,IACnCZ,MAAK,SAAAe,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,IAHX,0GAMA,SAAelB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCG,GAAhC,iFACQY,IAAAA,IAAA,gCACmBF,EADnB,kBACoCV,IAC9CF,MAAK,SAAAe,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,IAHX,0GAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,iFACQL,IAAAA,IAAA,iBACIK,EADJ,oBACuBP,IACjCZ,MAAK,SAAAe,GAAQ,OAAIA,EAASC,IAAb,IAHX,0GAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,iFACQL,IAAAA,IAAA,iBACIK,EADJ,4BAC+BP,IACzCZ,MAAK,SAAAe,GAAQ,OAAIA,EAASC,KAAKK,IAAlB,IAHX,0GAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,iFACQL,IAAAA,IAAA,iBACIK,EADJ,4BAC+BP,IACzCZ,MAAK,SAAAe,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,IAHX,0GA1BPH,IAAAA,SAAAA,QAAyB,8B","sources":["components/MoviesList.styled.js","components/SearchBox.styled.js","components/SearchBox.js","pages/Movies.js","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import styled from 'styled-components';\n//import { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\n//export const Icon = styled(HiSearch)`\n//width: 20px;\n//height: 20px;\n//position: absolute;\n//right: 6px;\n//`;\n","import { Wrapper, Input } from './SearchBox.styled';\n\nexport const SearchBox = ({ value, onChange }) => {\n  return (\n    <Wrapper>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n    </Wrapper>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams, Link } from 'react-router-dom';\nimport { SearchBox } from '../components/SearchBox';\nimport { getSearchedMovie } from 'services/moviesApi';\nimport { MovieName } from 'components/MoviesList.styled';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    if (movieName === '') {\n      setMovies([]);\n      return;\n    }\n    getSearchedMovie(movieName).then(movie => setMovies(movie));\n  }, [movieName]);\n  \n\n  return (\n    <div>\n      <SearchBox value={movieName} onChange={updateQueryString} />\n      <div>\n        {movies.map(movie => (\n          <div key={movie.id}>\n            <Link to={`${movie.id}`} state={{ from: location }}>\n              <img\n                src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n                alt=\"Poster\"\n              />\n              <MovieName>{movie.title}</MovieName>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '8ee74c176be1aa0cb6333771b517a964';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function getTrendingMovies() {\n  return await axios\n    .get(`/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data.results);\n}\n\nexport async function getSearchedMovie(query) {\n  return await axios\n    .get(`/search/movie?api_key=${API_KEY}&query=${query}`)\n    .then(response => response.data.results);\n}\n\nexport async function getMovieById(movieId) {\n  return await axios\n    .get(`/movie/${movieId}?api_key=${API_KEY}`)\n    .then(response => response.data);\n}\n\nexport async function getMovieCast(movieId) {\n  return await axios\n    .get(`/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(response => response.data.cast);\n}\n\nexport async function getMovieReviews(movieId) {\n  return await axios\n    .get(`/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(response => response.data.results);\n}\n"],"names":["MovieName","styled","Wrapper","Input","SearchBox","value","onChange","type","e","target","location","useLocation","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","getSearchedMovie","then","movie","query","map","to","id","state","from","src","poster_path","alt","title","API_KEY","getTrendingMovies","axios","response","data","results","getMovieById","movieId","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}