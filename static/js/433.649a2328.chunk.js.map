{"version":3,"file":"static/js/433.649a2328.chunk.js","mappings":"oQAGMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iPAeHE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OAAO,SAACL,EAAD,CAAYI,GAAIA,EAAhB,SAAqBC,GAC7B,E,UCjBYC,GAAWL,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iPAcRM,EAAgBN,EAAAA,GAAAA,IAAH,0GAMbO,EAAgBP,EAAAA,GAAAA,IAAH,+EAKbQ,EAAYR,EAAAA,GAAAA,IAAH,+CC4BtB,EAjDqB,WAAO,IAAD,IACjBS,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAM7C,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaC,OAAOZ,IAAUa,KAAKT,EACpC,GAAE,CAACJ,KAGF,iCACE,0BACE,SAACP,EAAD,CAAUC,GAAIa,EAAd,wBAEF,UAACT,EAAD,YACE,SAACC,EAAD,UACGI,EAAMW,cACL,gBACEC,IAAG,0CAAqCZ,EAAMW,aAC9CE,IAAKb,EAAMc,WAIjB,UAAClB,EAAD,YACE,wBAAKI,EAAMc,SACX,yCAAiBd,EAAMe,iBACvB,sCACA,uBAAIf,EAAMgB,YACV,2CAIJ,oDACA,UAACtB,EAAD,YACE,SAACD,EAAD,CAAUF,GAAG,OAAOc,MAAO,CAAEC,KAAMJ,EAASG,MAAMC,MAAlD,mBAGA,SAACb,EAAD,CAAUF,GAAG,UAAUc,MAAO,CAAEC,KAAMJ,EAASG,MAAMC,MAArD,yBAIF,SAAC,EAAAW,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C,4MCpDKC,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACQC,IAAAA,IAAA,sCACyBF,IACnCT,MAAK,SAAAY,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,IAHX,0GAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,iFACQL,IAAAA,IAAA,gCACmBF,EADnB,kBACoCO,IAC9ChB,MAAK,SAAAY,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,IAHX,0GAMA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BX,GAA5B,iFACQwB,IAAAA,IAAA,iBACIxB,EADJ,oBACuBsB,IACjCT,MAAK,SAAAY,GAAQ,OAAIA,EAASC,IAAb,IAHX,0GAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4B9B,GAA5B,iFACQwB,IAAAA,IAAA,iBACIxB,EADJ,4BAC+BsB,IACzCT,MAAK,SAAAY,GAAQ,OAAIA,EAASC,KAAKK,IAAlB,IAHX,0GAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BhC,GAA/B,iFACQwB,IAAAA,IAAA,iBACIxB,EADJ,4BAC+BsB,IACzCT,MAAK,SAAAY,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,IAHX,0GA1BPH,IAAAA,SAAAA,QAAyB,8B","sources":["components/BackLink.js","pages/MovieDetails.styled.js","pages/MovieDetails.js","services/moviesApi.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return <StyledLink to={to}>{children}</StyledLink>;\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const InfoLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\nexport const InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-bottom: 3px solid #ececec;\n`;\n\nexport const MovieInfoWrap = styled.div`\n  display: flex;\n  border-bottom: 3px solid #ececec;\n`;\n\nexport const MovieInfo = styled.div`\n  margin-right: 24px;\n`;\n","import { useEffect, useState, Suspense } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { BackLink } from 'components/BackLink';\nimport { getMovieById } from 'services/moviesApi';\nimport { InfoLink } from './MovieDetails.styled';\nimport { InfoContainer, MovieInfoWrap, MovieInfo } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    getMovieById(Number(movieId)).then(setMovie);\n  }, [movieId]);\n\n  return (\n    <>\n      <div>\n        <BackLink to={backLinkHref}>Go back</BackLink>\n      </div>\n      <MovieInfoWrap>\n        <MovieInfo>\n          {movie.poster_path && (\n            <img\n              src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n              alt={movie.title}\n            />\n          )}\n        </MovieInfo>\n        <MovieInfo>\n          <h1>{movie.title}</h1>\n          <h3>User score: {movie.vote_average}</h3>\n          <h3>Overview</h3>\n          <p>{movie.overview}</p>\n          <h3>Genres:</h3>\n        </MovieInfo>\n      </MovieInfoWrap>\n\n      <h2>Additional information</h2>\n      <InfoContainer>\n        <InfoLink to=\"cast\" state={{ from: location.state.from }}>\n          Cast\n        </InfoLink>\n        <InfoLink to=\"reviews\" state={{ from: location.state.from }}>\n          Reviews\n        </InfoLink>\n      </InfoContainer>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '8ee74c176be1aa0cb6333771b517a964';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function getTrendingMovies() {\n  return await axios\n    .get(`/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data.results);\n}\n\nexport async function getSearchedMovie(query) {\n  return await axios\n    .get(`/search/movie?api_key=${API_KEY}&query=${query}`)\n    .then(response => response.data.results);\n}\n\nexport async function getMovieById(movieId) {\n  return await axios\n    .get(`/movie/${movieId}?api_key=${API_KEY}`)\n    .then(response => response.data);\n}\n\nexport async function getMovieCast(movieId) {\n  return await axios\n    .get(`/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(response => response.data.cast);\n}\n\nexport async function getMovieReviews(movieId) {\n  return await axios\n    .get(`/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(response => response.data.results);\n}\n"],"names":["StyledLink","styled","Link","BackLink","to","children","InfoLink","InfoContainer","MovieInfoWrap","MovieInfo","movieId","useParams","useState","movie","setMovie","location","useLocation","backLinkHref","state","from","useEffect","getMovieById","Number","then","poster_path","src","alt","title","vote_average","overview","Suspense","fallback","API_KEY","getTrendingMovies","axios","response","data","results","getSearchedMovie","query","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}